package com.my.myapp;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.UUID;

import javax.annotation.Resource;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.board.model.BoardVO;
import com.board.service.BoardService;
import com.common.CommonUtil;

import lombok.extern.log4j.Log4j;

@Controller
@RequestMapping("/board")
@Log4j
public class BoardController {
	
	@Resource(name="boardService")
	private BoardService boardService;
	
	@Autowired
	private CommonUtil util;
	
	@GetMapping("/write")
	public String boardForm() {
		
		return "board/boardWrite";
		//WEB-INF/views/board/boardWrite.jsp
	}
	
	@PostMapping("/write")
	public String boardInsert(Model m, @ModelAttribute BoardVO board, 
			@RequestParam("mfilename") MultipartFile mf, HttpSession session) {
		log.info("board=="+board);
		//1. 파일 업로드 처리
		//[1] 업로드 디렉토리 절대경로 얻기(resources/board_upload)
		ServletContext app=session.getServletContext();
		String upDir=app.getRealPath("/resources/board_upload");
		File dir=new File(upDir);
		if(!dir.exists()) {
			dir.mkdirs();//업로드 디렉토리 생성
		}
		if(!mf.isEmpty()) {//첨부파일이 있다면
		
		//[2] 업로드한 파일명과 파일크기 알아내기==>board에 setFilename(파일명), setFilesize(파일크기)
			String fname=mf.getOriginalFilename();//원본파일명
			long fsize=mf.getSize();//파일 크기
			//파일 컨텐트 타입
			//String ftype=mf.getContentType();
			
			UUID uid=UUID.randomUUID();
			String filename=uid.toString()+"_"+fname;
			log.info("fname: "+fname+", filename: "+filename+", fsize: "+fsize);
			
			board.setOriginFilename(fname);//원본 파일명
			board.setFilename(filename);//물리적 파일명
			board.setFilesize(fsize);
			
		//[3] 업로드 처리
			try {
				mf.transferTo(new File(upDir, filename));
				log.info("upDir: "+upDir);
			}catch(IOException e) {
				log.error("파일업로드 에러: "+e);
			}
		}//if----
		
		//2. 유효성 체크 (제목,작성자,비번)=> write로 redirect이동
		if(board.getSubject()==null||board.getUserid()==null||board.getPasswd()==null||
				board.getSubject().trim().isEmpty()||board.getUserid().trim().isEmpty()
				||board.getPasswd().trim().isEmpty()) {
			
			return "redirect:write";
		}
		
		//3. boardService 의 insertBoard()호출
		int n=0;
		String str="";
		if("write".equals(board.getMode())) {
			//비밀번호 암호화 처리하기
			
			n=boardService.insertBoard(board);
			str="글쓰기 ";
		}else if("edit".equals(board.getMode())) {
			//수정처리
			str="글수정 ";
			
		}else if("rewrite".equals(board.getMode())) {
			//답변글쓰기
			str="답변 글쓰기 ";
		}
		str+=(n>0)?"성공":"실패";
		String loc=(n>0)?"list":"javascript:history.back()";
		//4. 그 결과 메시지,이동경로 처리
		return util.addMsgLoc(m, str, loc);
	}//-------------------------------------
	
	@GetMapping("/list")
	public String boardList(Model m) {
		//1. 총 게시글 수 가져오기
		int totalCount=this.boardService.getTotalCount();
		
		//2. 게시목록 가져 오기
		List<BoardVO> boardArr=this.boardService.selectBoardAll(null);
		
		m.addAttribute("totalCount",totalCount);
		m.addAttribute("boardArr",boardArr);
		
		return "board/boardList";
	}//-----------------------------------------
	
	//Path접근방식으로 데이터를 넘길경우
	@GetMapping("/view/{num}")
	public String boardView(Model m,@PathVariable("num") int num) {
		log.info("num: "+num);
		//1. 조회수 증가
		this.boardService.updateReadnum(num);
		
		//2. 글번호 해당 글 가져오기
		BoardVO vo=this.boardService.selectBoardByIdx(num);
		
		m.addAttribute("board",vo);
		
		return "board/boardView";
	}//-------
	
	@PostMapping("/delete")
	public String boardDelete(Model m,@RequestParam(defaultValue="0") int num,
			@RequestParam(defaultValue="")String passwd) {
		
		String str="삭제 테스트";
		Strin gloc="list";
		return util.addMsgLoc(m, str, loc);
	}

}








