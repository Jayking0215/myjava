package day01;

public class Operator1 {
	public static void print(String str) {
		System.out.println(str);
	}//귀찮아서 만든 print함수
	
	public static void main(String[] args) {
		print("1. 단항연산자 (부호연산자, 증감연산자, 비트별not연산자(~), 논리부정연산자(!)");
		
		print("단항연산자(+,-,*,/");
		byte a=5;
		byte b=-7;
		print("+a: "+(+a));
		print("-b: "+(-b));
		
		print("증감연산자(++,--)");
		int c=8;
		long d=6;
		c++;
		d--;
		print("c: "+c);//9
		print("d: "+d);//5
		++c;
		--d;
		print("c: "+c);//10
		print("d: "+d);//4
		
		float e=5.6f;
		double f=8.4;
		print("e: "+ ++e);//6.6
		print("f: "+ --f);//7.4
		
		print("e: "+ e++); //6.6->7.6
		print("f: "+ f--); //7.4->6.4
		
		print("비트별not연산자(~)");
		int m=42;
		print("m="+m);//42를 bit(2진수)로 바꾸어 연산해야함
		print("m="+(~m));//~: 0=>1, 1=>0 반전시킴
		/*
		 * 42를 2진수로
		 * 21...0
		 * 10...1
		 * 5...0
		 * 2...1
		 * 1...0
		 *  42= 00000000 00000000 00000000 00101010(int=4byte=32bit)
		 * ~42= 11111111 11111111 11111111 11010101
		 * ==> 이 값을 10진수로 바꿔서 표현
		 * 첫 비트가 부호비트 : 0:양수, 1:음수
		 * -1*2^31+1*2^30+... => 
		 * [1] 연속된 1을 모두 지우고 마지막 1만 살려서 계산: 1010101
		 * -1*2^6+1*2^4+2^2+1*2^0=-64 + 16 +4 +1 =-43
		 * */
		int x=0xfffffff1; //16진수
		//bit(2진수)=1111 1111 1111 1111 1111 1111 1111 0001(f(15)=1111)
		//~x :     0000	0000 0000 0000 0000 0000 0000 1110; 8+4+2=14
		print("x: "+x);//-15
		print("~x: "+(~x));//14
		
		
		
	}
}
