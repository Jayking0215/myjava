package memo.app;
//DAO(Model)와 VIEW를 연결하는 역할
import java.awt.event.*;
import java.sql.*;
import java.util.*;

/**
 * @author user
 * Controller
 *  View쪼게서 이벤트가 발생하면 이벤트를 처리한다.==>DB관련작업이 있으면 DAO객체 통해 작업을 수행
 *  ==>그 처리 결과를 View에 전달
 *  Model과 View사이에 제어하는 역할을 수행한다...DAO와 VIEW의 중간다리역할
 * */
public class MemoHandler implements ActionListener{
	MemoAppView app;//View..main()이기때문에 새로 생성x..액션핸들러를 통해서 제공받았음
	MemoDAO dao=new MemoDAO();//Model
	
	public MemoHandler(MemoAppView mav) {//인자 생성자 구성 후(view에서 this로 전달받는 것)
		this.app=mav;//this.app을 통해서 연결되어 핸들링 가능
	}
	
	@Override
	public void actionPerformed(ActionEvent e) {
//		app.showMessage("잘 나오나요?");//연동확인용
		Object obj=e.getSource();
		if(obj==app.btAdd) {
			addMemo();
			app.clearInput();
			listMemo();//전체목록 출력 메서드
		}else if(obj==app.btList) {
			listMemo();
		}else if(obj==app.btDel) {
			deleteMemo();
		}
	}//-----
	
	public void deleteMemo() {
		String noStr=app.showInputDialog("삭제할 글 번호를 입력하세요");
		if(noStr==null) return;
	}
	
	public void addMemo() {
		//[1]app의 tfName,tfMsg에 입력한 값 얻어오기
		String name=app.tfName.getText();
		String msg=app.tfMsg.getText();
		//[2]유효성 체크(null,빈문자열 체크)
		if(name==null||msg==null||name.trim().isEmpty()) {
			app.showMessage("작성자와 메모내용을 입력해야해요.");
			app.tfName.requestFocus();
			return;
		}
		//[3] [1]번에서 받은 값을 MemoVO객체에 담아준다.
		MemoVO memo=new MemoVO(0,name,msg,null);
		//[4] dao의 insertMemo()호
		try {
			int result=dao.insertMemo(memo);
		//[5] 결과값에 따라 메시지 처리
			if(result>0) {
				app.setTitle("글 등록 성공!!");
			}else {
				app.showMessage("글 등록 실패!!");
			}
		}catch(SQLException e) {
			app.showMessage(e.getMessage());
		}
	}//-----
	
	public void listMemo() {
		try {
			List<MemoVO> arr=dao.listMemo();
//			app.setTitle("전체 글 개수: "+arr.size()+"개");//작동확인용
			//모델(DAO)통해서 받아온 데이터를 화면단(VIEW의 app)에 넘겨준다
			app.showTextArea(arr);
		}catch(SQLException e) {
			app.showMessage(e.getMessage());
		}
;	}//-----
}
